version: 2.1

executors:
  base-cimg-executor:
    docker:
      - image: cimg/base:2021.07
  python-cimg-executor:
    docker:
      - image: cimg/python:3.10.6
  base-machine-executor:
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true

parameters:
  updated-sdk:
    type: boolean
    default: false

jobs:
  pre-commit:
    executor: python-cimg-executor
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install pre-commit
          command: |
            pip install pre-commit==2.20.0
      - run:
          name: Generate pre-commit cache key file
          command: |
            cp .pre-commit-config.yaml /tmp/pre-commit-cache-key.txt
            python --version --version >> /tmp/pre-commit-cache-key.txt
            pre-commit --version >> /tmp/pre-commit-cache-key.txt
      - restore_cache:
          name: Restore pre-commit cache
          keys:
            - aperture-java-v1-pc-cache-{{ checksum "/tmp/pre-commit-cache-key.txt"
              }}
            - aperture-java-v1-pc-cache-
      - run:
          name: Install pre-commit hooks
          command: |
            pre-commit install-hooks
      - run:
          name: Run pre-commit
          # It'd be faster to run it only on files changed between current branch and target PR branch
          # This can be done with: pre-commit run --from-ref <TARGET_BRANCH> --to-ref HEAD
          # Unfortunately, CircleCI doesn't expose target branch
          # Possible option is to use narrativescience/ghpr orb with get-pr-info, but this step can't be disabled
          # So then we'd only be able to run this job on PRs, and would require separate job for running on main
          # We use alternative approach, in which:
          # 1) If current branch is main - pre-commit checks all files
          # 2) Otherwise - we find common ancestor between current commit and main and run pre-commit with a base (from-ref) set to that ancestor
          command: |
            set -euo pipefail
            set -x
            export LOGURU_LEVEL=TRACE
            export GIT_SSH_COMMAND="fn circleci ssh -o IdentitiesOnly=yes -o IdentityAgent=none"
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              pre-commit run --all-files
            else
              base_ref="$(git merge-base main $CIRCLE_SHA1)"
              pre-commit run --from-ref "${base_ref}" --to-ref "$CIRCLE_SHA1"
            fi
      - save_cache:
          name: Save pre-commit cache
          key: aperture-java-v1-pc-cache-{{ checksum "/tmp/pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
      - run:
          name: Show diff and assert pre-commit didn't create any non-ignored files
          command: |
            git status
            git add .
            git diff --cached --exit-code
          when: always

  build-sdk:
    docker:
      # TODO make this configurable
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-v1-{{ checksum "build.gradle" }}
            - gradle-v1-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-v1-{{ checksum "build.gradle" }}
      # run tests!
      - run: gradle build --no-daemon
      - run: gradle test

workflows:
  version: 2

  sdk:
    when:
      or:
        - << pipeline.parameters.updated-sdk >>
    jobs:
      - build-sdk

  pre-commit:
    jobs:
      - pre-commit
